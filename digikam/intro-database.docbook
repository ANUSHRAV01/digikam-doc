<sect1 id="intro-database">
    <title>The &digikam; Database</title>

    <sect2 id="intro-database-intro">
        <title>Introduction</title>

        <para>
            <!-- TODO : explain here why we use database, which information are stored inside, the advantage to search information,
            how it's populated, how it's updated, etc...-->
        </para>

        <para>
            The &digikam; actually manages more than one databases. For convenience, it is broadly categorized in three:

            <orderedlist>

                <listitem><para>
                    Core database for all collection properties, i.e it hosts all albums, images and searches data.
                </para></listitem>

                <listitem><para>
                    Thumbnails database for compressed thumbnails i.e. to host image thumbs with wavelets compression images.
                </para></listitem>

                <listitem><para>
                    Face database for storing face recognition metadata i.e. to host face histogram for faces recognition.
                </para></listitem>

            </orderedlist>

        </para>

    </sect2>

    <sect2 id="intro-database-sqlite">
        <title>The Sqlite Database</title>

        <para>
            <!-- TODO : add more description of sqlite as the most use embeded DB in the world -->
        </para>

        <para>
            By default, &digikam; uses SQLite as its back-end for storing important metadata and thumbnails. Tree SQLite files used for storing them are digikam4.db, thumbnails-digikam.db, and recognition.db respectively.
        </para>

        <para>
            To make your application run fast and smoothly, it is recommended to check and optimize your databases once in awhile. This could be achieved using sqlite3 packages or sqlite browser (high quality, easy to use visual tool for managing database objects). For Ubuntu and its derivatives, it could be retrieved using sudo apt-get install sqlite3 or sudo apt-get install sqlitebrowser. Now all remains is to open the terminal, switch to the directory where databases and stored, and voila!
        </para>

        <note><para>
            Take care to use a place hosted by fast hardware (such as SSD) with enough free space especially for thumbnails database. A remote file system such as NFS cannot be used here. For performance and technical reasons, you cannot use removable media.
        </para></note>

        <para>
            <!-- TODO : add more details about storage place of sqlite files -->
        </para>

        <para>
            <inlinemediaobject><imageobject>
                <imagedata fileref="&path;intro-database-sqlite.png" format="PNG" /></imageobject>
            </inlinemediaobject>
        </para>

    </sect2>

    <sect2 id="intro-database-mysql">
        <title>The MySQL Database</title>

        <sect3>
            <title>MySQL Versus QSlite</title>

            <para>
                <!-- TODO : add more description of Mysqland MAriabd, the history and differences, especially about how many items can be stored in each DB type (items and albums) -->
            </para>

            <para>
                &digikam; also provides support for popular MySQL database engine. Of course, you might wonder why you’d want to switch to MySQL when SQLite already does a good job of managing the data? Using MySQL as &digikam;’s database back-end allows you to store the data on a remote server. This way, you can use multiple &digikam; installations (e.g. On your notebook and PC) to access and manage your photo collections. You can also use MySQL tools to backup and analyze &digikam;’s data.
            </para>

            <para>

                To switch from SQLite to MySQL database, go to <guimenu>Settings</guimenu> / <guimenuitem>Configure &digikam;</guimenuitem> and then under <guilabel>Settings</guilabel> section, select a database from the drop down list.

                <orderedlist>

                    <listitem><para>
                        MySQL Internal: This allows to run an internal database server on your system. DigiKam uses Unix socket for the connection.
                    </para></listitem>

                    <listitem><para>
                        MySQL Remote: Use this if you’ve your data on remote server and and you’re on a different machine trying to access the collection.
                    </para></listitem>

                </orderedlist>

            </para>

        </sect3>

        <sect3>
            <title>The MySQL Internal Server</title>

            <para>
                <!-- TODO : add more description of mysql internal solutions, from a technical view -->
            </para>

            <para>
                <inlinemediaobject><imageobject>
                     <imagedata fileref="&path;intro-database-mysqlinternal.png" format="PNG" /></imageobject>
                </inlinemediaobject>
            </para>

        </sect3>

        <sect3>
            <title>The MySQL Remote Server</title>

            <para>
                Obviously, to use &digikam; with a remote MySQL, you would require a MySQL server. Or, you could also install MariaDB, which serves the purpose well.(Could be installed easily using this <ulink url="http://www.liquidweb.com/kb/how-to-install-mariadb-5-5-on-ubuntu-14-04-lts/">link</ulink>.
            </para>

            <para>
                Follow the instructions below, if you don’t have a dedicated user account and a &digikam; database already set up. Run the commands in MySQL server (after replacing password with correct one):
            </para>

            <para>
                <!-- TODO : The instruction below are not enough as command arguments will chnage depending of database names -->
            </para>

            <blockquote><screen>
                CREATE USER ''@'%' IDENTIFIED BY 'password';
                GRANT ALL ON *.* TO ''@'%' IDENTIFIED BY 'password';
                CREATE DATABASE digikam;
                GRANT ALL PRIVILEGES ON digikam.* TO ''@'%';
                FLUSH PRIVILEGES;
            </screen></blockquote>

            <note><para>
                Note: If you have an enormous collection, you should start the MySQL server with “mysql --max_allowed_packet = 128M”
            </para></note>

            <para>
                Now, in &digikam;, go to <guimenu>Settings</guimenu> / <guimenuitem>Configure &digikam;</guimenuitem> and then under <guilabel>Settings</guilabel> section, select <guilabel>MySQL Server</guilabel> from the drop down list.
            </para>

            <para>
                <inlinemediaobject><imageobject>
                    <imagedata fileref="&path;intro-database-remotemysql.png" format="PNG" /></imageobject>
                </inlinemediaobject>
            </para>

            <para>
                Enter the IP address of your MySQL server in the Host Name field and specify the correct port in the Port field (the default port is 3306). In the Schema Name field, enter the name of the database for storing photo metadata, and specify the name of the database for storing thumbnails in the Thumbnails Schema Name field. Enter your MySQL username and password in the appropriate fields. To check whether the database connection works properly, press the Check DB Connection button. If everything works as it’s supposed to, switch to the Collections sections, and add the directories containing your photos. Hit OK, and wait till digiKam populates the databases with data from photos. This can take a while if you have a lot of photos.
            </para>

            <para>
                <!-- TODO : Remote Mysql will use network : Give all recommendation to have the best performance results -->
            </para>

        </sect3>

    </sect2>

    <!-- TODO : add new sect2 about Database backup recommendation -->

    <!-- TODO : add new sect2 about Database migration tool -->

</sect1>

<!--
Local Variables:
mode: sgml
sgml-omittag: nil
sgml-shorttag: t
End:
-->
