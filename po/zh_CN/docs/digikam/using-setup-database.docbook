<sect2 id="using-setup-database">
    <title
>数据库设置</title>

    <para>

        <note
><para
>有关内部数据存储的介绍，请参阅 <link linkend="intro-database"
> &digikam; 数据库介绍</link
> 部分。 </para
></note>

    </para>

    <sect3 id="using-setup-database-sqlite">
        <title
>Sqlite 数据库</title>

        <para
><ulink url="https://sqlite.org"
>SQLite</ulink
> 是一个关系型数据库管理系统, 包含在 C语言的库中。SQLite 与C/S架构的 SQL 数据库引擎如 MySQL、Oracle 或 PostgreSQL等没有直接的可比性。相反, 它是一个嵌入式 SQL 数据库引擎, &ie; 它嵌入到一个终端程序中。SQLite 直接读取和写入磁盘上的普通文件。对于较低的写并发和内容少于1T的本地设备存储来说, SQLite 几乎总是一个更好的解决方案。SQLite 快速可靠, 无需配置或维护，非常简便。SQLite 就是这么好用。 </para>

        <para
>默认情况下，&digikam; 使用 SQLite 作为其后端存储重要的元数据和缩略图。三个用于存储它们的 SQLite 文件分别命名为: <orderedlist>

                <listitem
><para
>核心： digikam4.db。 </para
></listitem>

                <listitem
><para
>缩略图：thumbnails-digikam.db。 </para
></listitem>

                <listitem
><para
>人脸：recognition.db。 </para
></listitem>

            </orderedlist>

        </para>

        <para
>为了使应用程序快速、顺畅地运行, 建议您在一段时间内对数据库进行一次检查和优化。这可以使用 sqlite3 包或 sqlite browser(高质量、易于使用的用来管理数据库对象的可视化工具) 来实现。对于 Ubuntu 及其衍生版本, 它可以使用 <command
>sudo apt-get install sqlite3</command
> 或 <command
>sudo apt-get install sqlitebrowser</command
>。然后只需要打开终端, 切换到存储数据库的目录即可。 </para>

        <note
><para
>请注意使用高速硬件(如 SSD), 并提供足够的可用空间, 特别是缩略图数据库。此处不能使用NFS之类的远程文件系统。出于性能和技术原因, 您不能使用可移动媒体。 </para
></note>

        <para
>SQLite 数据库文件可以在您已添加到 &digikam; 的“集合”文件夹中找到。(默认情况下, 如果添加“图片”集合, 则数据库文件将出现在 <filename class="directory"
> ~/图片</filename
> 文件夹中)。 </para>

        <para>
            <inlinemediaobject
><imageobject>
                <imagedata fileref="&path;intro-database-sqlite.png" format="PNG"/></imageobject>
            </inlinemediaobject>
        </para>

    </sect3>

    <sect3 id="using-setup-database-mysql">
        <title
>MySQL 数据库</title>

        <sect4>
            <title
>MySQL vs SQLite</title>

            <para
><ulink url="https://www.mysql.com"
>MySQL</ulink
>是一个开源的关系数据库管理系统，用C和C ++编写。MySQL最初由Michael Widenius和David Axmark于1994年开发。Sun Microsystems于2008年收购了MySQL，后来于2010年被Oracle收购。MySQL目前几乎适用于所有系统平台(Linux，Microsoft Windows，OS X，SunOS…)。 </para>

            <para
><ulink url="https://mariadb.org/"
>MariaDB</ulink
> 服务器是一个由社区开发的 MySQL 的分支版本。它由原 MySQL 团队的核心成员发起，其团队和外部开发者积极协作以创造业界功能最多、最稳定、授权协议最理性的开源 SQL 服务器。 </para>

            <para
>由于一些基本原因，MariaDB 实际上已经取代了 MySQL： <orderedlist>

                    <listitem
><para
>MariaDB 的开发更加开放和有活力。 </para
></listitem>

                    <listitem
><para
>更多的尖端功能。 </para
></listitem>

                    <listitem
><para
>更多的存储引擎。 </para
></listitem>

                    <listitem
><para
>更好的性能。 </para
></listitem>

                    <listitem
><para
>兼容并且易于迁移。 </para
></listitem>

                </orderedlist>

            </para>

            <para
>&digikam; 亦对流行的 MySQL 数据库引擎提供支持。当然，你可能会好奇，为什么要在 SQLite 管理数据做得不错的情况下切换到 MySQL 呢？MySQL 在存储 &digikam; 数据时有很多优势——尤其是当集合中的内容超过 100,000 条时。在集合如此庞大的情况下，SQLite 会产生延迟使应用变慢。 </para>

            <para
>使用 MySQL 作为 &digikam;的数据库后端，您可以将数据存储在本地或远程服务器上。在本地可以取代 SQLite 的工作，还能通过网络将数据存在公用的电脑上。把 MySQL 作为 &digikam; 的数据库后端后，您可以在各种设备上（比如笔记本和台式机上）通过 &digikam; 管理和查看同一份照片集。您还可使用 MySQL 的工具来备份和分析 &digikam; 存储的数据。 </para>

            <para
>欲从 SQLite 切换到 MySQL 数据库，进入<guimenuitem
>设置</guimenuitem
> / <guimenuitem
>配置&digikam;...</guimenuitem
>，并在<guilabel
>设置</guilabel
>段落从下拉列表中选择一个数据库。 <orderedlist>

                    <listitem
><para
>MySQL 内部服务器：在您自己的电脑上运行数据库服务器。 &digikam; 使用 Unix 域套接字连接数据库。 </para
></listitem>

                    <listitem
><para
>MySQL 远程服务器：如果你的数据不在这台电脑上而在另一台远端的服务器上，请选择此项。 </para
></listitem>

                </orderedlist>

            </para>

        </sect4>

        <sect4>
            <title
>MySQL 内部服务器</title>

            <para
>当仓库很大时（超过 100,000 条记录），本程序可能会运行迟缓。为了避免变慢，保持效率，&digikam; 提供使用 <guilabel
>MySQL 内部服务器</guilabel
>的选项。准确地说，并不是要在您的电脑上运行服务器程序或让数据可以公开访问。相反，这样选择的话，只是在本程序运行的时候才会启动数据库。 </para>

            <para
>内部服务器程序会创建一个单独的数据库，可以通过如下命令访问（必须在本程序运行期间）： <command
>mysql --socket=/home/<replaceable
>[user_name]</replaceable
>/.local/share/digikam/db_misc/mysql.socket digikam</command
> </para>

            <para
>内部服务器程序采用了两个 MySQL 工具——<application
>mysql_install_db</application
> 和 <application
>mysqld</application
>。您可以在“配置”对话框里选择他们的位置。如果您的系统里有安装这两个工具的话，&digikam; 会尝试自动找到。 </para>

            <para>
                <inlinemediaobject
><imageobject>
                    <imagedata fileref="&path;intro-database-mysqlinternal.png" format="PNG"/></imageobject>
                </inlinemediaobject>
            </para>

        </sect4>

        <sect4>
            <title
>MySQL 远程服务器</title>

            <para
>要让 &digikam; 配合远程 MySQL 运行，当然需要有一个在远端的 MySQL 服务器。或者，您也可以使用远端的 MariaDB 服务器，效果相同（可以参考<ulink url="http://www.liquidweb.com/kb/how-to-install-mariadb-5-5-on-ubuntu-14-04-lts/"
>这个链接</ulink
>很容易地安装）。 </para>

            <para
>如果您还没有一个单独的账户赋给 &digikam; 数据库并配置完毕，请按照下列步骤操作。在 MySQL 服务器上运行下列命令（记得将密码替换为您设置的）： </para>

            <note
><para
>您可以给数据库取一个想要的名字（比如“digikam”）。只要记得在下面显示的对话框中分别输入核心、缩略图、人脸数据库名就行了。 </para
></note>

            <blockquote
><screen
>CREATE USER ''@'%' IDENTIFIED BY 'password';
                GRANT ALL ON *.* TO ''@'%' IDENTIFIED BY 'password';
                CREATE DATABASE digikam;
                GRANT ALL PRIVILEGES ON digikam.* TO ''@'%';
                FLUSH PRIVILEGES;
            </screen
></blockquote>

            <note
><para
>如果您的收藏集很大，您应该用 <command
>mysql --max_allowed_packet = 128M</command
> 命令来启动 MySQL 服务器。 </para
></note>

            <para
>现在，请到 &digikam; 中打开<menuchoice
><guimenu
>设置</guimenu
><guimenuitem
>配置 &digikam;...</guimenuitem
></menuchoice
>，然后在<guilabel
>设置</guilabel
>小节从下拉菜单中选择<guilabel
>MySQL 服务器</guilabel
>。 </para>

            <para>
                <inlinemediaobject
><imageobject>
                    <imagedata fileref="&path;intro-database-remotemysql.png" format="PNG"/></imageobject>
                </inlinemediaobject>
            </para>

            <para
>请在<guilabel
>主机名</guilabel
>一栏内输入您 MySQL 服务器的 IP 地址，并正确填写<guilabel
>端口</guilabel
>一栏（默认端口号为 3306）。 </para>

            <para
>在<guilabel
>核心数据库名</guilabel
>一栏中，请输入想要存储照片元数据的数据库名。 </para>

            <para
>在<guilabel
>缩略图数据库名</guilabel
>一栏输入用来存放小波压缩的缩略图。 </para>

            <para
>第三个需要填写的是用来存储用于人脸识别的脸部直方图的数据库。请在<guilabel
>人脸数据库名</guilabel
>一栏填入。 </para>

            <para
>为了确保与远程服务器安全地进行连接，请在<guilabel
>用户名</guilabel
>和<guilabel
>密码</guilabel
>栏中填入您的账号密码。 </para>

            <para
>想检查数据库是否正确连上了，可以点击<guibutton
>检查连接</guibutton
>按钮。如果一切正常，您就可以切换到<guilabel
>收藏集</guilabel
>小节，添加有照片的目录。点击<guibutton
>确定</guibutton
>，&digikam; 就会往数据库里填入从照片中抓取的信息了。如果您的照片信息比较多，这一步可能要花些时间。 </para>

            <para
>这里有一些使用远程MySQL远程服务来获取最佳结果的提示和建议。 </para>

            <para
>当使用速度较慢的网络时 &digikam; 需要花费大量的时间，特别是当想的中包含太多条目的时候（大于1000条）。这个解决方案依赖于网络性能。例如当使用Wifi连接网络的时候，此问题将重现。切换到以太网可以解决这个问题。 </para>

            <para
>另外，如果你有一个巨大的收藏集，你应该以命令<command
>mysql --max_allowed_packet = 128M</command
>来启动MySQL服务。（如果您对使用MySQL非常熟悉，您也可以修改您在 my.ini或者 ~/.my.cnf配置文件中的配置）。 </para>

        </sect4>

    </sect3>

    <sect3 id="using-setup-database-migration">
        <title
>数据库迁移</title>

        <para
>照片管理应用自带专用工具“数据库迁移器”，这个工具可以帮助用户迁移数据库中的用户数据。举个例子，这个工具可以胜任把SQLite中的所有用户数据迁移到MySQL数据库的任务，同时它也可以把MySQL中的数据迁移至SQLite。 </para>

        <para
>为了迁移至另一个数据库，点击菜单<menuchoice
><guimenu
>设置</guimenu
> <guimenuitem
>数据库迁移...</guimenuitem
></menuchoice
>. 然后会出现一个对话框： </para>

        <para>
            <inlinemediaobject
><imageobject>
                <imagedata fileref="&path;intro-database-migration.png" format="PNG"/></imageobject>
            </inlinemediaobject>
        </para>

        <para
>现在选择你要转换到的合适的数据库类型。最后，单击<guibutton
>迁移</guibutton
>按钮来将数据库从 SQLite 转换为 MySQL（或者反过来）。 </para>

    </sect3>

    <sect3 id="using-setup-database-backup">
        <title
>数据库备份建议</title>

        <para
>安全起见，定期通过网络备份数据库，有助于防止设备故障带来的后果。你也可以用 NAS 或者外置硬盘进行备份。 </para>

        <para
>每个数据库都可以起一个不同的名字，并不限于“digicam”。这让用户只备份需要的内容。例如，将“核心”数据库命名为 digikamCore，就可以只隔离出这个表（最重要的文件）。缩略图和识别数据库可以随时从头再生。 </para>

        <para
><link linkend="tool-maintenance"
>&digikam; 维护工具</link
>这一章将解释如何及时维护数据库内容，以及如何将集合与数据库信息同步（反之亦然）。 </para>

    </sect3>

    <sect3 id="using-setup-database-statistics">
        <title
>数据库统计</title>

        <para
>&digikam;提供一个独特的工具来维护集合的统计信息。它包括图像计数、视频（包括按图像格式的单个计数）、标签&etc;此外，还包括数据库后端（QSQLITE或QMYSQL）和数据库路径（您的集合所在的位置）。 </para>

        <para
>您可以通过去 <menuchoice
><guimenu
>帮助</guimenu
> <guimenuitem
>数据库统计</guimenuitem
></menuchoice
>查看您的统计数据。像这样的对话框会出现： </para>

        <para>
            <inlinemediaobject
><imageobject>
                <imagedata fileref="&path;intro-database-statistics.png" format="PNG"/></imageobject>
            </inlinemediaobject>
        </para>

    </sect3>

</sect2>

<!--
Local Variables:
mode: sgml
sgml-omittag: nil
sgml-shorttag: t
End:
-->
